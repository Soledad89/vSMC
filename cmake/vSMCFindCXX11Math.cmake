# ============================================================================
#  cmake/vSMCFindCXX11Math.cmake
# ----------------------------------------------------------------------------
#
#                          vSMC: Scalable Monte Carlo
#
#  This file is distribured under the 2-clauses BSD License.
#  See LICENSE for details.
# ============================================================================

IF (DEFINED VSMC_CXX11_MATH_FOUND)
    RETURN ()
ENDIF (DEFINED VSMC_CXX11_MATH_FOUND)

FILE (READ ${CMAKE_CURRENT_LIST_DIR}/vSMCFindCXX11Math.cpp
    VSMC_CXX11_MATH_TEST_SOURCE)

INCLUDE (CheckCXXSourceRuns)
SET (SAFE_CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS})
SET (SAFE_CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES})
IF (VSMC_ENABLE_CXX11)
    SET (CMAKE_REQUIRED_DEFINITIONS ${SAFE_CMAKE_REQUIRED_DEFINITIONS}
        -DVSMC_HAS_C99LIB_MATH=0 -DVSMC_HAS_CXX11LIB_CMATH=1)
    CHECK_CXX_SOURCE_RUNS ("${VSMC_CXX11_MATH_TEST_SOURCE}"
        VSMC_CXX11_MATH_STD_FOUND)
ENDIF (VSMC_ENABLE_CXX11)
IF (NOT VSMC_CXX11_MATH_STD_FOUND)
    SET (CMAKE_REQUIRED_DEFINITIONS ${SAFE_CMAKE_REQUIRED_DEFINITIONS}
        -DVSMC_HAS_C99LIB_MATH=1 -DVSMC_HAS_CXX11LIB_CMATH=0)
    CHECK_CXX_SOURCE_RUNS ("${VSMC_CXX11_MATH_TEST_SOURCE}"
        VSMC_CXX11_MATH_C99_FOUND)
ENDIF (NOT VSMC_CXX11_MATH_STD_FOUND)
IF (NOT VSMC_CXX11_MATH_STD_FOUND AND NOT VSMC_CXX11_MATH_C99_FOUND)
    SET (CMAKE_REQUIRED_DEFINITIONS ${SAFE_CMAKE_REQUIRED_DEFINITIONS}
        -DVSMC_HAS_C99LIB_MATH=0 -DVSMC_HAS_CXX11LIB_CMATH=0)
    CHECK_CXX_SOURCE_RUNS ("${VSMC_CXX11_MATH_TEST_SOURCE}"
        VSMC_CXX11_MATH_BOOST_FOUND)
ENDIF (NOT VSMC_CXX11_MATH_STD_FOUND AND NOT VSMC_CXX11_MATH_C99_FOUND)
IF (VSMC_CXX11_MATH_STD_FOUND OR VSMC_CXX11_MATH_C99_FOUND
        OR VSMC_CXX11_MATH_BOOST_FOUND)
    SET (VSMC_CXX11_MATH_FOUND TRUE CACHE BOOL "C++11 math functions")
ENDIF (VSMC_CXX11_MATH_STD_FOUND OR VSMC_CXX11_MATH_C99_FOUND
    OR VSMC_CXX11_MATH_BOOST_FOUND)
SET (CMAKE_REQUIRED_DEFINITIONS ${SAFE_CMAKE_REQUIRED_DEFINITIONS})
SET (CMAKE_REQUIRED_INCLUDES ${SAFE_CMAKE_REQUIRED_INCLUDES})
