SET (GSL_FOUND TRUE)

FIND_PROGRAM (GSL_CONFIG gsl-config)

IF (${GSL_CONFIG} STREQUAL GSL_CONFIG-NOTFOUND)
    SET (GSL_LIB_PATH ${GSL_LIB_PATH} ${CMAKE_LIBRARY_PATH})
    FIND_LIBRARY (GSL_LINK_LIBRARIES gsl
        PATHS ${GSL_LIB_PATH} ENV LIBRARY_PATH)
    IF (${GSL_LINK_LIBRARIES} STREQUAL GSL_LINK_LIBRARIES-NOTFOUND)
        MESSAGE (STATUS "NOT Found GSL")
        SET (GSL_FOUND FALSE)
    ELSE (${GSL_LINK_LIBRARIES} STREQUAL GSL_LINK_LIBRARIES-NOTFOUND)
        MESSAGE (STATUS "Found GSL: ${GSL_LINK_LIBRARIES}")
    ENDIF (${GSL_LINK_LIBRARIES} STREQUAL GSL_LINK_LIBRARIES-NOTFOUND)

    FIND_PATH (GSL_INCLUDE_DIR gsl/gsl_rng.h ENV INCLUDE)
    IF (${GSL_INCLUDE_DIR} STREQUAL GSL_INCLUDE_DIR-NOTFOUND)
        MESSAGE (STATUS "NOT Found GSL headers: Test disabled.")
        SET (GSL_FOUND FALSE)
    ELSE (${GSL_INCLUDE_DIR} STREQUAL GSL_INCLUDE_DIR-NOTFOUND)
        MESSAGE (STATUS "Found GSL headers: ${GSL_INCLUDE_DIR}")
    ENDIF (${GSL_INCLUDE_DIR} STREQUAL GSL_INCLUDE_DIR-NOTFOUND)
ELSE (${GSL_CONFIG} STREQUAL GSL_CONFIG-NOTFOUND)
    EXECUTE_PROCESS (COMMAND ${GSL_CONFIG} --libs-without-cblas
        OUTPUT_VARIABLE GSL_LINK_LIBRARIES OUTPUT_STRIP_TRAILING_WHITESPACE)
    EXECUTE_PROCESS (COMMAND ${GSL_CONFIG} --cflags
        OUTPUT_VARIABLE GSL_INCLUDE_DIR OUTPUT_STRIP_TRAILING_WHITESPACE)
    STRING (REGEX REPLACE "^ *\\-I(.*)" "\\1"
        GSL_INCLUDE_DIR ${GSL_INCLUDE_DIR})
    MESSAGE (STATUS "Found GSL: ${GSL_LINK_LIBRARIES}")
    MESSAGE (STATUS "Found GSL headers: ${GSL_INCLUDE_DIR}")
ENDIF (${GSL_CONFIG} STREQUAL GSL_CONFIG-NOTFOUND)
