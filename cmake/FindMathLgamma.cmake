SET (MATH_LGAMMA_TEST_SOURCE "
#include <cassert>
#include <cmath>

#ifdef MATH_LGAMMA_C99_FOUND
#define MATH_LGAMMA lgamma
#endif

#ifdef MATH_LGAMMA_STD_FOUND
#define MATH_LGAMMA std::lgamma
#endif

#ifdef MATH_LGAMMA_BOOST_FOUND
#include <boost/math/special_functions/gamma.hpp>
#define MATH_LGAMMA boost::math::lgamma
#endif

int main ()
{
    assert(std::abs(MATH_LGAMMA(2)) < 1e-10);

    return 0;
}
")

IF (NOT MATH_LGAMMA_FOUND)
    UNSET (MATH_LGAMMA_FOUND CACHE)
    UNSET (MATH_LGAMMA_C99_FOUND CACHE)
    UNSET (MATH_LGAMMA_STD_FOUND CACHE)
    UNSET (MATH_LGAMMA_BOOST_FOUND CACHE)
    INCLUDE (FindBoost)
    SET (SAFE_CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES})
    SET (CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES}
        ${Boost_INCLUDE_DIRS})
    CHECK_CXX_SOURCE_RUNS ("${MATH_LGAMMA_TEST_SOURCE}" MATH_LGAMMA_C99_FOUND)
    CHECK_CXX_SOURCE_RUNS ("${MATH_LGAMMA_TEST_SOURCE}" MATH_LGAMMA_STD_FOUND)
    CHECK_CXX_SOURCE_RUNS ("${MATH_LGAMMA_TEST_SOURCE}"
        MATH_LGAMMA_BOOST_FOUND)
    IF (MATH_LGAMMA_C99_FOUND OR MATH_LGAMMA_STD_FOUND OR
            MATH_LGAMMA_BOOST_FOUND)
        SET (MATH_LGAMMA_FOUND TRUE)
    ENDIF (MATH_LGAMMA_C99_FOUND OR MATH_LGAMMA_STD_FOUND OR
        MATH_LGAMMA_BOOST_FOUND)
    SET (CMAKE_REQUIRED_INCLUDES ${SAFE_CMAKE_REQUIRED_INCLUDES})
ENDIF (NOT MATH_LGAMMA_FOUND)
