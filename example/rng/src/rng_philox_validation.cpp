//============================================================================
// vSMC/example/rng/src/rng_philox_validation.cpp
//----------------------------------------------------------------------------
//                         vSMC: Scalable Monte Carlo
//----------------------------------------------------------------------------
// Copyright (c) 2013-2015, Yan Zhou
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//   Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
//
//   Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//============================================================================

#include "rng_validation.hpp"
#include <vsmc/rng/philox.hpp>

int main()
{
    std::vector<unsigned long long> Philox2x32Result = {3042402420ULL,
        169313591ULL, 3747406927ULL, 3832456848ULL, 4191510268ULL,
        2269719504ULL, 1630796489ULL, 3502000319ULL, 2162724100ULL,
        558404972ULL, 2606258319ULL, 3808683057ULL, 409826501ULL,
        2641775037ULL, 1490303483ULL, 2154861027ULL, 783683537ULL,
        1382267482ULL, 1857172618ULL, 1138240251ULL, 1402823982ULL,
        3502645791ULL, 594627598ULL, 1840751789ULL, 3924731824ULL,
        2647041477ULL, 2553588228ULL, 405447954ULL, 1991583508ULL,
        358810315ULL, 2784103652ULL, 668513251ULL, 1733160864ULL,
        2448805269ULL, 3917688041ULL, 4232838763ULL, 97900485ULL,
        1724493487ULL, 814818321ULL, 478269136ULL, 3536432357ULL,
        2065155627ULL, 1555324713ULL, 2971939624ULL, 2810238724ULL,
        1141457478ULL, 1445381695ULL, 2127250884ULL, 1246498797ULL,
        1715087104ULL, 566178709ULL, 1222706370ULL, 2858176679ULL,
        2359068455ULL, 1437680380ULL, 3611007158ULL, 3657537146ULL,
        3529048496ULL, 2138495008ULL, 1610815743ULL, 3671311724ULL,
        3094454198ULL, 4165822485ULL, 3788350951ULL, 3338301994ULL,
        2521211253ULL, 3946212686ULL, 3024483363ULL, 3497148993ULL,
        3936685325ULL, 3079695875ULL, 3317052734ULL, 726446847ULL,
        2681638401ULL, 883489893ULL, 1946056105ULL, 939986024ULL,
        3839458559ULL, 1539778940ULL, 1779228249ULL, 1957749276ULL,
        1067897119ULL, 4068810222ULL, 3846775004ULL, 2949215770ULL,
        977858834ULL, 571982885ULL, 1995309497ULL, 3324926105ULL,
        852120107ULL, 528623666ULL, 2541865808ULL, 4057154511ULL,
        3867699224ULL, 2363721550ULL, 3927364134ULL, 2628277181ULL,
        604395302ULL, 3056864126ULL, 3171397880ULL, 97ULL};
    rng_validation<vsmc::Philox2x32>(Philox2x32Result, "Philox2x32");

    std::vector<unsigned long long> Philox4x32Result = {1916349580ULL,
        3753440142ULL, 641987403ULL, 2103054029ULL, 132749699ULL,
        3448629928ULL, 4093713979ULL, 1812905329ULL, 1920346148ULL,
        2986748640ULL, 3918359155ULL, 2613693740ULL, 3608233260ULL,
        4045388693ULL, 3516512745ULL, 370381595ULL, 3159516518ULL,
        2593659335ULL, 1942032665ULL, 1613480419ULL, 1472230528ULL,
        2505407342ULL, 1019727972ULL, 3623995202ULL, 3789911592ULL,
        1665939083ULL, 2018275294ULL, 810360492ULL, 3420420174ULL,
        193368897ULL, 637132560ULL, 475891616ULL, 4204433010ULL, 49234150ULL,
        1634522970ULL, 672884730ULL, 3596093734ULL, 3729538383ULL,
        3941103736ULL, 43495800ULL, 3293129558ULL, 1599893461ULL,
        1605453953ULL, 4186895348ULL, 2979507858ULL, 2378350193ULL,
        1976906939ULL, 3893712265ULL, 1256578338ULL, 2046066416ULL,
        3788680039ULL, 848575340ULL, 2392628885ULL, 21562498ULL,
        2464581561ULL, 3192111071ULL, 1044382536ULL, 793418180ULL,
        1674307323ULL, 243578616ULL, 2802485373ULL, 4086973958ULL,
        3242653996ULL, 3435004958ULL, 374265746ULL, 403677689ULL,
        2688147782ULL, 1023939746ULL, 451013680ULL, 1128371222ULL,
        4067774620ULL, 2558647366ULL, 2638024230ULL, 3091771783ULL,
        217526797ULL, 4159088909ULL, 1662921883ULL, 1273534047ULL,
        1757222158ULL, 119639236ULL, 2311324474ULL, 1277813721ULL,
        1708743590ULL, 2663453457ULL, 207449639ULL, 3199783799ULL,
        3415510258ULL, 3145221329ULL, 2181404658ULL, 1581638362ULL,
        3058154039ULL, 2927857215ULL, 3197236953ULL, 3195408077ULL,
        2681211954ULL, 2512936220ULL, 771524089ULL, 3622939913ULL,
        2691688601ULL, 1461590535ULL, 58ULL};
    rng_validation<vsmc::Philox4x32>(Philox4x32Result, "Philox4x32");

    std::vector<unsigned long long> Philox2x64Result = {
        1418191697303273519ULL, 4048817734230616909ULL,
        6899750360432692377ULL, 6322000270784768726ULL,
        15578779929315950702ULL, 8175519627745688900ULL,
        13181734809920357183ULL, 11518392836270742113ULL,
        7027140771657272289ULL, 488521437742903141ULL, 6535792365839086248ULL,
        5503593193290108163ULL, 14269628760371859643ULL,
        4071369200590030092ULL, 1129886803663161574ULL,
        15720535733986533371ULL, 3342544534401316261ULL,
        16394632445299928217ULL, 1265843252794369590ULL,
        16390288702909831647ULL, 7253746441728209994ULL,
        11960681716714616088ULL, 17743532930793456844ULL,
        8236372483946654236ULL, 2347942268667857032ULL,
        11089336645818618297ULL, 2515717680042829025ULL,
        1872646162030966783ULL, 2002458073749221164ULL,
        2420501063740427084ULL, 15969350392162556032ULL,
        3827790954106801726ULL, 16475285464153453042ULL,
        403603666686213902ULL, 3136938253658005746ULL, 420961232438319903ULL,
        2986498758397721229ULL, 2478403544844450913ULL,
        4204000967182046441ULL, 14535063311115651125ULL,
        15758513311193827127ULL, 8194317943275530126ULL,
        6247709312249146338ULL, 7516646937804285816ULL,
        3706528978431006012ULL, 18289989286171280453ULL,
        18242468639403298651ULL, 18096788722744148600ULL,
        7668213868496863104ULL, 17244227892869970734ULL,
        13263906259029647096ULL, 2071218654911063343ULL,
        6580646690103909717ULL, 2797678404801724498ULL,
        12616462607659342319ULL, 9424764581152833381ULL,
        17765063957536483385ULL, 2557750716443514191ULL,
        10610774875989980597ULL, 16333979054475824066ULL,
        916979234222422353ULL, 11370080863915747768ULL,
        3540655614560751544ULL, 2682271626470000978ULL,
        1336432753298895190ULL, 1123458449399587140ULL,
        16384926197245363065ULL, 4989935511055693182ULL,
        11021283952424301043ULL, 18387560699663650241ULL,
        11858872047435428348ULL, 13062554239886593166ULL,
        18379763348496077402ULL, 17639448979849305255ULL,
        12372758968228048905ULL, 16098655245433589572ULL,
        17525274800076368942ULL, 12295759542642553904ULL,
        4661997876777692108ULL, 7839941312479184580ULL,
        10143778551444792687ULL, 14675942476138616556ULL,
        1251652942647044125ULL, 10800907164377076131ULL,
        12292487397752331679ULL, 15163617166592460356ULL,
        7918091473463651962ULL, 8254895501205593866ULL,
        14759655100624635560ULL, 18307351357691029167ULL,
        15318557739491787231ULL, 2938580944202494991ULL,
        3344326003738730511ULL, 14583673827807869519ULL,
        4324584820662041573ULL, 6381171645862812874ULL,
        9062227142773194024ULL, 13129873185980933977ULL,
        12884118943316313934ULL, 7378101473767988402ULL, 43ULL};
    rng_validation<vsmc::Philox2x64>(Philox2x64Result, "Philox2x64");

    std::vector<unsigned long long> Philox4x64Result = {
        1135232164641618720ULL, 1328677139452949904ULL,
        9251917751882778917ULL, 8438796094638586179ULL,
        6406767942393564469ULL, 6185622996992131904ULL, 389665235313914113ULL,
        17844938132261965296ULL, 5639819279343883606ULL,
        6110347032330331535ULL, 9127361827368073741ULL,
        12441180124365480803ULL, 13235072381612041108ULL,
        17030585218596377712ULL, 13429600012620604017ULL,
        10024517810872064101ULL, 1546068666666754279ULL,
        6045044483228999904ULL, 2416732335286977066ULL,
        3852610223930164542ULL, 4879161484379433139ULL,
        9149352888474367047ULL, 17291191018474640610ULL,
        14913366078136905804ULL, 4942798070049727586ULL,
        4660614186306380701ULL, 17966013610521864069ULL,
        18435019224746977149ULL, 9245169042013474319ULL,
        5409466266893782834ULL, 1104096516280750283ULL,
        4419513414243656896ULL, 13822995903275958409ULL,
        14362383944844598172ULL, 17532578463490122374ULL,
        7123416720076725055ULL, 11944936002981686857ULL,
        18413361105666436943ULL, 8434434691706116921ULL,
        11424679471866048061ULL, 16853940600452798878ULL,
        3495709949724709093ULL, 2296039982239263840ULL,
        14786196841064020259ULL, 16494155629103407331ULL,
        4979783229432109847ULL, 1633499107595880032ULL,
        8033553780508620834ULL, 3978593918667967736ULL,
        1304724333459543111ULL, 15312801121040076386ULL,
        15856516289784593779ULL, 6607290684067459722ULL,
        3070491840192675389ULL, 2961941493186699134ULL,
        14898929443564510870ULL, 4896451862455417918ULL,
        9266656793705676226ULL, 10456077638586420842ULL,
        5399318521963264008ULL, 9283736894636034562ULL,
        15484863327012902354ULL, 7266704721942483946ULL,
        17710823072435999780ULL, 7753404342430416497ULL,
        7994509516939256347ULL, 6941836108528759027ULL,
        3512063069958453029ULL, 7260955058449860965ULL,
        4859553688900321158ULL, 14181630383404793954ULL,
        12416913922728985352ULL, 487081929660589178ULL,
        15816180136681499076ULL, 15337000840737580388ULL,
        18200796243409146732ULL, 9571806005573902641ULL,
        14879161118379564684ULL, 17113716038218506273ULL,
        5288951220628684718ULL, 5022184668300049212ULL,
        12769583843099593506ULL, 3403957977476016854ULL,
        366128766970362312ULL, 17748434704249244633ULL,
        13599392213584168366ULL, 3882283602722490273ULL,
        8976487034263614404ULL, 10363007370132574919ULL,
        12533338767198046463ULL, 12453626499960013554ULL,
        2157920898509622976ULL, 6553037649311601785ULL,
        2361546003674961807ULL, 11733397741934230137ULL,
        11700558051951754221ULL, 7128956384422182095ULL,
        6012413445486895860ULL, 13107811751487901281ULL,
        1354190185993662527ULL, 99ULL};
    rng_validation<vsmc::Philox4x64>(Philox4x64Result, "Philox4x64");

    return 0;
}
