{"name":"vSMC","tagline":"vSMC: Scalable Monte Carlo","body":"# Introduction\r\n\r\nThe vSMC library provides a framework for implementing SMC algorithms. It has a\r\ncore module which performs resampling, etc., operations common to all SMC\r\nalgorithms and applications. In addition, it provides the bases for\r\nimplementing parallelized samplers. The SMC algorithms are highly\r\nparallelizable, but there are many frameworks for doing this. This library\r\ntries to hide the different parallelization mechanism behind a unified\r\ninterface, and thus increases code reuse.\r\n\r\n# Installation\r\n\r\nThis is a header only template C++ library. To install the library just move\r\nthe contents of the `include` directory into a proper place, e.g.,\r\n`/usr/local/include` in Unix-alike systems. Alternatively, one can use\r\n[CMake][CMake] (2.8.3 or later required),\r\n~~~sh\r\ncd /path_to_vSMC_source\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake install\r\n~~~\r\nOne may need `su` or `sudo` permissions to perform the last installation step.\r\n\r\n# Documentation\r\n\r\nTo make the documentations one need [Doxygen][Doxygen] 1.8.3 or later.\r\n~~~sh\r\nmake docs\r\n~~~\r\nThe documentation of the [master][vSMCDocMaster] and\r\n[develop][vSMCDocDevelop] branches can be found online.\r\n\r\nA [tutorial][vSMCTutorial] is also available. However, it describes an earlier\r\nversion of the library.  There are a few incompatibilities with the current\r\nversion. It is still highly relevant. Users shall use the Doxygen generated\r\ndocumentations when things do not work exactly the same way as in the tutorial.\r\n\r\n# Examples\r\n\r\nExamples are in the `example` subdirectory, to build them,\r\n~~~sh\r\ncd /path_to_vSMC_source\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake example\r\n~~~\r\nMost examples also come with their own `README` files that give relevant\r\nreferences.\r\n\r\n# Parallelization backends\r\n\r\nThe library support various backends for multi-thread parallelization, unified\r\nunder a uniform interface. One is C++11 concurrency. For a full C++11\r\nimplementation, this means no third-party dependency is required to write a\r\nparallel SMC sampler. Other third-party parallelization include, [Intel Cilk\r\nPlus][Intel Cilk Plus], [Intel TBB][Intel TBB] and [OpenMP][OpenMP]. [Apple\r\nGrand Central Dispatch][Apple GCD] is also supported on Mac OS X. [Microsoft\r\nParallel Patterns Library][MS PPL] is supported on Windows when compiled with\r\n[Microsoft Visual C++][MSVC] 2012 or later. In addition, this library also\r\nsupport using [OpenCL][OpenCL] for GPGPU computing, though the interface is\r\ndifferent than others.\r\n\r\n# Third-party dependencies\r\n\r\nThis library has no dependences other than C++ standard libraries (C++11). Any\r\nC++11 language features are optional.\r\n\r\nIn particular, the library use the `<functional>` and `<random>` headers, which\r\nare parts of the C++11 standard libraries. Equivalences can be found in recent\r\nversions of [Boost][Boost]. The library does its best to detect a usable C++11\r\nsolution and falls back to [Boost][Boost] if it fails to do so. This behavior\r\ncan be changed explicitly through configuration macros.\r\n\r\n# Compiler support\r\n\r\nThis library makes heavy use of some template metaprogramming techniques. It\r\nrequires a standard conforming compiler. Fortunately, most commonly used\r\nmodern compilers, at least in C++98 mode, is able to compile the examples\r\ndistributed with the library, provided that they can compile the Boost library.\r\n\r\nThis library has been regularly tested with recent [Clang][Clang], [GCC][GCC]\r\nand [Intel C++ Compiler][icpc], in both C++98 and C++11 modes.\r\n\r\n[Microsoft Visual C++][MSVC] 2012 or later are also supported. However, this\r\ncompiler is tested less regularly.\r\n\r\nOther compilers might work but are not tested.\r\n\r\n# License\r\n\r\nThe vSMC library is distributed with a 2-clause BSD license which can be found\r\nin the `LICENSE` file distributed with the source.\r\n\r\n[Apple GCD]: http://en.wikipedia.org/wiki/Grand_Central_Dispatch\r\n[Boost]: http://www.boost.org\r\n[CMake]: http://www.cmake.org\r\n[Clang]: http://clang.llvm.org\r\n[Doxygen]: http://www.stack.nl/~dimitri/doxygen/manual.html\r\n[GCC]: http://gcc.gnu.org\r\n[Intel Cilk Plus]: https://www.cilkplus.org\r\n[Intel TBB]: http://threadingbuildingblocks.org\r\n[MS PPL]: http://msdn.microsoft.com/en-us/library/dd492418.aspx\r\n[MSVC]: http://msdn.microsoft.com/en-us/vstudio//default.aspx\r\n[OpenCL]: http://www.khronos.org/opencl\r\n[OpenMP]: http://www.openmp.org\r\n[icpc]: http://software.intel.com/en-us/intel-compilers\r\n[vSMCDocMaster]: http://zhouyan.github.io/vSMCDoc/master\r\n[vSMCDocDevelop]: http://zhouyan.github.io/vSMCDoc/develop\r\n[vSMCTutorial]: http://arxiv.org/pdf/1306.5583v1.pdf\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}