{"name":"vSMC","tagline":"vSMC: Scalable Monte Carlo","body":"# Introduction\r\n\r\nvSMC library provide a framework for implementing SMC algorithms. It provides a\r\ncore module which perform resampling, etc., operations common to all SMC\r\nalgorithms and applications. In addition, it provides the bases for\r\nimplementing parallelized samplers. The SMC algorithms are highly\r\nparallelizable, but there are many frameworks for doing this. This library\r\ntries to hide the different parallelization mechanism behind a unified\r\ninterface, and thus increases code reuse.\r\n\r\n# Installation\r\n\r\nThis is a header only template C++ library. To install the library just move\r\nthe contents of the `include` directory into a proper place, e.g.,\r\n`/usr/local/include` in Unix-alike systems. Alternatively, one can use\r\n[CMake][CMake] (2.8 or later required),\r\n~~~sh\r\ncd /path_to_vSMC_source\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake install\r\n~~~\r\nOne may need `su` or `sudo` permissions to perform the last installation step.\r\n\r\n# Documentation\r\n\r\nTo make the documentations one need [Doxygen][Doxygen] 1.8.3 or later.\r\n~~~sh\r\nmake docs\r\n~~~\r\nThe documentation can also be found [here][vSMCDoc]. A [tutorial][vSMCTutorial]\r\nis also available. However, it describes an earlier version of the library.\r\nThere are a few incompatibilities with the current version. It is still highly\r\nrelevant. Users shall use the Doxygen generated documentations when things do\r\nnot work exactly the same way as in the tutorial.\r\n\r\n# Examples\r\n\r\n[Examples][vSMCExample] are now hosted separately. To get and build them,\r\n~~~sh\r\ncd /path_to_vSMC_source\r\ngit clone https://github.com/zhouyan/vSMCExample.git\r\nmkdir build\r\ncmake ..\r\nmake example\r\n~~~\r\nMost examples also come with their own `README` files that give relevant\r\nreferences.\r\n\r\n# Parallelization backends\r\n\r\nThe library support various backends for multi-thread parallelization, unified\r\nunder a uniform interface. One is C++11 concurrency. For a full C++11\r\nimplementation, this means no third-party dependency is required to write a\r\nparallel SMC sampler. Other third-party parallelization include, [Intel Cilk\r\nPlus][Intel Cilk Plus], [Intel TBB][Intel TBB] and [OpenMP][OpenMP]. [Apple\r\nGrand Central Dispatch][Apple GCD] is also supported on Mac OS X and on Linux\r\nvia [libdispatch][libdispatch]. [Microsoft Parallel Patterns Library][MS PPL]\r\nis supported on Windows when compiled with MSVC 2010 or later. In addition,\r\nthis library also support using [OpenCL][OpenCL] for GPGPU computing, though\r\nthe interface is different than others.\r\n\r\n# Third-party dependencies\r\n\r\nThis library has no dependences other than C++ standard libraries (C++11). Any\r\nC++11 language features are optional.\r\n\r\nIn particular, the library use the `<functional>` and `<random>` headers, which\r\nare parts of the C++11 standard libraries. Equivalences can be found in\r\n[Boost][Boost]. By default the library will use the [Boost][Boost] library as\r\nC++11 implementations are not mature at the time writing. But if the C++\r\nimplementation has them correctly implemented, the standard headers can also be\r\nused by defining suitable macros (see reference manual for details).\r\n\r\nNote that this library is only tested with [Boost][Boost] 1.49 or later. Also\r\nnot all C++11 implementations of `<functional>` and `<random>` work properly\r\neven they are present.\r\n\r\n# Compiler support\r\n\r\nThis library makes heavy use of some template metaprogramming techniques. It\r\nrequires a standard conforming compiler. Fortunately, most commonly used\r\nmodern compilers, at least in C++98 mode, is able to compile the examples\r\ndistributed with the library.\r\n\r\nThis library has been regularly tested with recent [Clang][Clang], [GCC][GCC]\r\nand [Intel C++ Compiler][icpc], in both C++98 and C++11 modes. In particular,\r\n[Clang][Clang] 3.3 and later with [libc++][libc++] and [GCC][GCC] 4.7 and later\r\nsupport all the C++11 features used by the library very well. [Intel C++\r\nCompiler][icpc] when used with [GCC][GCC] 4.7's standard library can also\r\nsupport all the C++11 features. When it is used with [GCC][GCC] 4.8's standard\r\nlibrary, though all features are supported, some examples fail to compile when\r\ncomplex template constructs are involved. The issues are still under\r\ninvestigation. The current workaround is to use the [Boost][Boost] Function\r\nlibrary instead of the standard library `<functional>` (by defining the flag\r\n`-DVSMC_HAS_CXX11LIB_FUNCTIONAL=0`) when using this compiler configuration in\r\nC++11 mode.\r\n\r\n[Microsoft Visual C++][MSVC] is also supported. Version 2008 and later are able\r\nto compile the examples in C++98 mode. Version 2012 and later support most of\r\nthe C++11 features. However, this compiler is tested less regularly.\r\n\r\nOther compilers such as [Open64][Open64] were previously tested in C++98 mode\r\n(most of them don't support C++11 at all). Future developments will rely more\r\non C++11 features. There are likely to be new (optional) features that are\r\nC++11 only. Therefore, these outdated compilers won't be tested anymore.\r\nHowever, for the foreseeable future, all basic features should be supported by\r\na C++98 compiler.\r\n\r\n# License\r\n\r\nThe vSMC library is distributed with a 2-clause BSD license which can be found\r\nin the `LICENSE` file distributed with the source.\r\n\r\n[Apple GCD]: http://en.wikipedia.org/wiki/Grand_Central_Dispatch\r\n[Boost]: http://www.boost.org/\r\n[CMake]: http://www.cmake.org/\r\n[Clang]: http://clang.llvm.org\r\n[Doxygen]: http://www.stack.nl/~dimitri/doxygen/manual.html\r\n[GCC]: http://gcc.gnu.org\r\n[Intel Cilk Plus]: https://www.cilkplus.org\r\n[Intel TBB]: http://threadingbuildingblocks.org/\r\n[MS PPL]: http://msdn.microsoft.com/en-us/library/dd492418.aspx\r\n[MSVC]: http://msdn.microsoft.com/en-us/vstudio//default.aspx\r\n[Open64]: http://www.open64.net\r\n[OpenCL]: http://www.khronos.org/opencl/\r\n[OpenMP]: http://www.openmp.org/\r\n[icpc]: http://software.intel.com/en-us/intel-compilers\r\n[libc++]: http://libcxx.llvm.org\r\n[libdispatch]: http://libdispatch.macosforge.org/\r\n[vSMCDoc]: http://zhouyan.github.io/vSMCDoc/doc/html/\r\n[vSMCExample]: https://github.com/zhouyan/vSMCExample\r\n[vSMCTutorial]: http://arxiv.org/pdf/1306.5583v1.pdf\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}